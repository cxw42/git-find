#!/usr/bin/env perl

# This chunk of stuff was generated by App::FatPacker. To find the original
# file's code, look for the end of this BEGIN block or the string 'FATPACK'
BEGIN {
my %fatpacked;

$fatpacked{"App/GitFind.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'APP_GITFIND';
  package App::GitFind;
  
  use 5.010;
  use strict;
  use warnings;
  
  =head1 NAME
  
  App::GitFind - The great new App::GitFind!
  
  =head1 VERSION
  
  Version 0.01
  
  =cut
  
  our $VERSION = '0.01';
  
  
  =head1 SYNOPSIS
  
  Quick summary of what the module does.
  
  Perhaps a little code snippet.
  
      use App::GitFind;
  
      my $foo = App::GitFind->new();
      ...
  
  =head1 EXPORT
  
  A list of functions that can be exported.  You can delete this section
  if you don't export anything, such as for a purely object-oriented module.
  
  =head1 SUBROUTINES/METHODS
  
  =head2 function1
  
  =cut
  
  sub function1 {
  }
  
  =head2 function2
  
  =cut
  
  sub function2 {
  }
  
  =head1 AUTHOR
  
  Christopher White, C<< <cxw at cpan.org> >>
  
  =head1 BUGS
  
  Please report any bugs or feature requests to C<bug-app-gitfind at rt.cpan.org>, or through
  the web interface at L<https://rt.cpan.org/NoAuth/ReportBug.html?Queue=App-GitFind>.  I will be notified, and then you'll
  automatically be notified of progress on your bug as I make changes.
  
  
  
  
  =head1 SUPPORT
  
  You can find documentation for this module with the perldoc command.
  
      perldoc App::GitFind
  
  
  You can also look for information at:
  
  =over 4
  
  =item * RT: CPAN's request tracker (report bugs here)
  
  L<https://rt.cpan.org/NoAuth/Bugs.html?Dist=App-GitFind>
  
  =item * AnnoCPAN: Annotated CPAN documentation
  
  L<http://annocpan.org/dist/App-GitFind>
  
  =item * CPAN Ratings
  
  L<https://cpanratings.perl.org/d/App-GitFind>
  
  =item * Search CPAN
  
  L<https://metacpan.org/release/App-GitFind>
  
  =back
  
  
  =head1 ACKNOWLEDGEMENTS
  
  
  =head1 LICENSE AND COPYRIGHT
  
  Copyright 2019 Christopher White.
  
  This program is distributed under the MIT (X11) License:
  L<http://www.opensource.org/licenses/mit-license.php>
  
  Permission is hereby granted, free of charge, to any person
  obtaining a copy of this software and associated documentation
  files (the "Software"), to deal in the Software without
  restriction, including without limitation the rights to use,
  copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the
  Software is furnished to do so, subject to the following
  conditions:
  
  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  OTHER DEALINGS IN THE SOFTWARE.
  
  
  =cut
  
  1; # End of App::GitFind
APP_GITFIND

s/^  //mg for values %fatpacked;

my $class = 'FatPacked::'.(0+\%fatpacked);
no strict 'refs';
*{"${class}::files"} = sub { keys %{$_[0]} };

if ($] < 5.008) {
  *{"${class}::INC"} = sub {
    if (my $fat = $_[0]{$_[1]}) {
      my $pos = 0;
      my $last = length $fat;
      return (sub {
        return 0 if $pos == $last;
        my $next = (1 + index $fat, "\n", $pos) || $last;
        $_ .= substr $fat, $pos, $next - $pos;
        $pos = $next;
        return 1;
      });
    }
  };
}

else {
  *{"${class}::INC"} = sub {
    if (my $fat = $_[0]{$_[1]}) {
      open my $fh, '<', \$fat
        or die "FatPacker error loading $_[1] (could be a perl installation issue?)";
      return $fh;
    }
    return;
  };
}

unshift @INC, bless \%fatpacked, $class;
  } # END OF FATPACK CODE

use App::GitFind;
exit App::GitFind->new->run(\@ARGV);
